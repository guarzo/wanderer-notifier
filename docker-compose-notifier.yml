services:
  wanderer_notifier:
    image: guarzo/wanderer-notifier:latest
    container_name: notifier
    command: sh -c 'sleep 5 && /app/bin/wanderer_notifier eval "WandererNotifier.Release.createdb()" && /app/bin/wanderer_notifier eval "WandererNotifier.Release.migrate()" && /app/bin/wanderer_notifier start'
    env_file:
      - ./.env-notifier
    restart: unless-stopped
    environment:
      - PORT=4000
      - POSTGRES_HOST=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=wanderer_notifier
      - ENABLE_KILL_CHARTS=true
    ports:
      - "${PORT:-4000}:4000"
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - wanderer_data:/app/data
    deploy:
      resources:
        limits:
          memory: 512M
      restart_policy:
        condition: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:4000/health"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 15s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    networks:
      - default
      - web

  postgres:
    image: postgres:16-alpine
    container_name: notifier-postgres
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - default
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=wanderer_notifier
    volumes:
      - notifier_data:/var/lib/postgresql/data

volumes:
  wanderer_data:
  notifier_data:
    external: true

networks:
  web:
    external: true
    name: web 