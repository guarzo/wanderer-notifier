services:
  wanderer_notifier:
    image: guarzo/wanderer-notifier:v1
    container_name: wanderer
    restart: unless-stopped
    env_file:
      - .env
    ports:
      - "${WANDERER_PORT:-4000}:4000"
    deploy:
      resources:
        limits:
          memory: 512M
      restart_policy:
        condition: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:4000/health"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 15s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    volumes:
      - wanderer_data:/app/data

  # Database service
  postgres:
    image: postgres:16-alpine
    container_name: wanderer-postgres
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    environment:
      - POSTGRES_USER=${WANDERER_DB_USER:-postgres}
      - POSTGRES_PASSWORD=${WANDERER_DB_PASSWORD:-postgres}
      - POSTGRES_DB=${WANDERER_DB_NAME:-wanderer_notifier}
    volumes:
      - postgres_data:/var/lib/postgresql/data

  # Database initialization container
  db_init:
    image: guarzo/wanderer-notifier:latest
    profiles: ["database"]
    environment:
      # Database configuration
      WANDERER_DB_HOST: postgres
      WANDERER_DB_USER: ${WANDERER_DB_USER:-postgres}
      WANDERER_DB_PASSWORD: ${WANDERER_DB_PASSWORD:-postgres}
      WANDERER_DB_NAME: ${WANDERER_DB_NAME:-wanderer_notifier}
      WANDERER_DB_PORT: "5432"
    command: sh -c '/app/bin/wanderer_notifier eval "WandererNotifier.Release.createdb()" && /app/bin/wanderer_notifier eval "WandererNotifier.Release.migrate()"'
    depends_on:
      postgres:
        condition: service_healthy

volumes:
  wanderer_data:
  postgres_data:
    name: wanderer_postgres_data
