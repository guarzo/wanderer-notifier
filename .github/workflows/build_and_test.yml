name: Build and Test

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:
    inputs:
      version_type:
        description: "Version increment type (for release)"
        required: false
        default: "patch"
        type: choice
        options:
          - patch
          - minor
          - major
      branch:
        description: "Branch to build (for adhoc)"
        required: false
        default: "main"

# Anchors for common steps
x-checkout-cache: &checkout-cache
  - name: Checkout code
    uses: actions/checkout@v4
  - name: Common Checkout and Cache
    uses: ./.github/actions/common-checkout-cache
    with:
      branch: ${{ github.event.inputs.branch || 'main' }}
      cache-key-prefix: mix
      cache-paths: |
        deps
        _build
        priv/static

x-elixir-setup: &elixir-setup
  - name: Common Elixir Setup
    uses: ./.github/actions/common-elixir-setup
    with:
      elixir-version: "1.18"
      otp-version: "27"

x-node-setup: &node-setup
  - name: Common Node.js Setup
    uses: ./.github/actions/common-node-setup
    with:
      node_version: "20"
      cache_dependency_path: "renderer/package-lock.json"
  - name: Install frontend dependencies and build
    run: |
      cd renderer
      npm ci
      npm run build
      cd ..

x-docker-build: &docker-build
  - name: Build Docker image (SHA tagged)
    uses: ./.github/actions/common-docker-build
    with:
      context: .
      push: false
      load: true
      tags: guarzo/wanderer-notifier:sha-${{ github.sha }}
      build-args: |
        APP_VERSION=0.0.0-ci-test
        WANDERER_NOTIFIER_API_TOKEN=${{ secrets.NOTIFIER_API_TOKEN }}
      cache-from: type=registry,ref=guarzo/wanderer-notifier:latest
      cache-to: type=inline

jobs:
  test:
    name: Build and Test
    runs-on: ubuntu-latest
    env:
      MIX_ENV: test
      WANDERER_NOTIFIER_API_TOKEN: ${{ secrets.NOTIFIER_API_TOKEN }}
      WANDERER_DISCORD_BOT_TOKEN: ${{ secrets.FAKE_DISCORD_TOKEN }}
      WANDERER_CACHE_DIR: "/tmp/wanderer_notifier_cache"
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Common Checkout and Cache
        uses: ./.github/actions/common-checkout-cache
        with:
          branch: ${{ github.event.inputs.branch || 'main' }}
          cache-key-prefix: mix
          cache-paths: |
            deps
            _build
            priv/static
      - name: Common Elixir Setup
        uses: ./.github/actions/common-elixir-setup
        with:
          elixir-version: "1.18"
          otp-version: "27"
      - name: Install dependencies
        run: |
          mix deps.get
          mix deps.compile
      - name: Compile (warnings as errors)
        run: mix compile --warnings-as-errors
      - name: Run tests
        run: mix test
      - name: Generate test coverage
        run: mix test --cover

  lint:
    name: Lint code
    runs-on: ubuntu-latest
    needs: test
    env:
      MIX_ENV: dev
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Common Checkout and Cache
        uses: ./.github/actions/common-checkout-cache
        with:
          branch: ${{ github.event.inputs.branch || 'main' }}
          cache-key-prefix: mix
          cache-paths: |
            deps
            _build
            priv/static
      - name: Common Elixir Setup
        uses: ./.github/actions/common-elixir-setup
        with:
          elixir-version: "1.18"
          otp-version: "27"
      - name: Install dependencies
        run: |
          mix local.hex --force
          mix deps.get
          mix deps.compile
      - name: Check formatting
        run: mix format --check-formatted
      - name: Run code quality checks
        run: mix credo --strict

  docker:
    name: Validate Docker image
    runs-on: ubuntu-latest
    needs: lint
    env:
      MIX_ENV: prod
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Common Checkout and Cache
        uses: ./.github/actions/common-checkout-cache
        with:
          branch: ${{ github.event.inputs.branch || 'main' }}
          cache-key-prefix: mix
          cache-paths: |
            deps
            _build
            priv/static
      - name: Common Elixir Setup
        uses: ./.github/actions/common-elixir-setup
        with:
          elixir-version: "1.18"
          otp-version: "27"
      - name: Common Node.js Setup
        uses: ./.github/actions/common-node-setup
        with:
          node_version: "20"
          cache_dependency_path: "renderer/package-lock.json"
      - name: Build Docker image (SHA tagged)
        uses: ./.github/actions/common-docker-build
        with:
          context: .
          push: false
          load: true
          tags: guarzo/wanderer-notifier:sha-${{ github.sha }}
          build-args: |
            APP_VERSION=0.0.0-ci-test
            WANDERER_NOTIFIER_API_TOKEN=${{ secrets.NOTIFIER_API_TOKEN }}
          cache-from: type=registry,ref=guarzo/wanderer-notifier:latest
          cache-to: type=inline
      - name: Full Docker validation with web server
        env:
          DISCORD_TOKEN: ${{ secrets.FAKE_DISCORD_TOKEN }}
          MAP_URL_WITH_NAME: "http://example.com/map?name=testmap"
          MAP_TOKEN: ${{ secrets.MAP_TOKEN }}
          DISCORD_CHANNEL_ID: ${{ secrets.DISCORD_CHANNEL_ID }}
          LICENSE_KEY: ${{ secrets.LICENSE_KEY }}
        run: |
          echo "Running comprehensive Docker validation..."
          chmod +x ./scripts/test_docker_image.sh
          ./scripts/test_docker_image.sh -i wanderer-notifier -t pr-${{ github.sha }} \
            --discord-token "$DISCORD_TOKEN" \
            --env "WANDERER_MAP_URL=$MAP_URL_WITH_NAME" \
            --env "WANDERER_MAP_TOKEN=$MAP_TOKEN" \
            --env "WANDERER_DISCORD_CHANNEL_ID=$DISCORD_CHANNEL_ID" \
            --env "WANDERER_LICENSE_KEY=$LICENSE_KEY" \
            --env "WANDERER_ENV=test" \
            --env "WANDERER_FEATURE_DISABLE_WEBSOCKET=true"
          echo "Docker image validation successful!"

  release:
    name: Release
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch' && github.event.inputs.version_type != ''
    env:
      MIX_ENV: prod
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Common Versioning
        uses: ./.github/actions/common-versioning
        id: version
        with:
          mode: release
          version_type: ${{ github.event.inputs.version_type }}
      - name: Common Node.js Setup
        uses: ./.github/actions/common-node-setup
        with:
          node_version: "20"
          cache_dependency_path: "renderer/package-lock.json"
      - name: Build Docker image (SHA tagged)
        uses: ./.github/actions/common-docker-build
        with:
          context: .
          push: false
          load: true
          tags: guarzo/wanderer-notifier:sha-${{ github.sha }}
          build-args: |
            APP_VERSION=0.0.0-ci-test
            WANDERER_NOTIFIER_API_TOKEN=${{ secrets.NOTIFIER_API_TOKEN }}
          cache-from: type=registry,ref=guarzo/wanderer-notifier:latest
          cache-to: type=inline
      # Add additional release steps as needed (tagging, pushing, etc.)

  adhoc:
    name: Adhoc Build
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch' && github.event.inputs.branch != ''
    env:
      MIX_ENV: prod
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Common Versioning
        uses: ./.github/actions/common-versioning
        id: version
        with:
          mode: adhoc
          branch: ${{ github.event.inputs.branch }}
      - name: Common Node.js Setup
        uses: ./.github/actions/common-node-setup
        with:
          node_version: "20"
          cache_dependency_path: "renderer/package-lock.json"
      - name: Build Docker image (SHA tagged)
        uses: ./.github/actions/common-docker-build
        with:
          context: .
          push: false
          load: true
          tags: guarzo/wanderer-notifier:sha-${{ github.sha }}
          build-args: |
            APP_VERSION=0.0.0-ci-test
            WANDERER_NOTIFIER_API_TOKEN=${{ secrets.NOTIFIER_API_TOKEN }}
          cache-from: type=registry,ref=guarzo/wanderer-notifier:latest
          cache-to: type=inline
      # Add additional adhoc steps as needed (pushing, etc.)

  automatic:
    name: Automatic Image
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    env:
      MIX_ENV: prod
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Common Versioning
        uses: ./.github/actions/common-versioning
        id: version
        with:
          mode: automatic
      - name: Common Node.js Setup
        uses: ./.github/actions/common-node-setup
        with:
          node_version: "20"
          cache_dependency_path: "renderer/package-lock.json"
      - name: Build Docker image (SHA tagged)
        uses: ./.github/actions/common-docker-build
        with:
          context: .
          push: false
          load: true
          tags: guarzo/wanderer-notifier:sha-${{ github.sha }}
          build-args: |
            APP_VERSION=0.0.0-ci-test
            WANDERER_NOTIFIER_API_TOKEN=${{ secrets.NOTIFIER_API_TOKEN }}
          cache-from: type=registry,ref=guarzo/wanderer-notifier:latest
          cache-to: type=inline
      # Add additional automatic steps as needed (pushing, etc.)
