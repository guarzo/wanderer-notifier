name: Ad-hoc

on:
  workflow_dispatch:
    inputs:
      branch:
        description: "Branch to build"
        required: true
        default: "main"

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      MIX_ENV: prod
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.inputs.branch }}
          fetch-depth: 0 # required for getting commit history

      - name: Set up build cache
        uses: actions/cache@v3
        with:
          path: |
            deps
            _build
            priv/static
          key: ${{ runner.os }}-mix-${{ hashFiles('**/mix.lock') }}
          restore-keys: |
            ${{ runner.os }}-mix-

      - name: Generate version information
        id: version
        run: |
          chmod +x ./scripts/version.sh

          # Replace slashes in branch name with hyphens for Docker tag
          SAFE_BRANCH=$(echo "${{ github.event.inputs.branch }}" | sed 's/\//-/g')

          # Get current version (don't bump for ad-hoc builds)
          CURRENT_VERSION=$(./scripts/version.sh get)
          # Generate dev version with date/git info and branch name
          FULL_VERSION="${CURRENT_VERSION}-${SAFE_BRANCH}+$(date +'%Y%m%d').$(git rev-parse --short HEAD)"

          # Store in environment for later steps
          echo "version=${CURRENT_VERSION}" >> "$GITHUB_OUTPUT"
          echo "full_version=${FULL_VERSION}" >> "$GITHUB_OUTPUT"
          echo "safe_branch=${SAFE_BRANCH}" >> "$GITHUB_OUTPUT"

          # Create Docker tag list
          DOCKER_TAG_LIST="guarzo/wanderer-notifier:branch-${SAFE_BRANCH},guarzo/wanderer-notifier:branch-${SAFE_BRANCH}-$(date +'%Y%m%d')-$(git rev-parse --short HEAD)"

          echo "docker_tags=${DOCKER_TAG_LIST}" >> "$GITHUB_OUTPUT"

          echo "Current version: ${CURRENT_VERSION}"
          echo "Full version: ${FULL_VERSION}"
          echo "Docker tags: ${DOCKER_TAG_LIST}"

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
          cache-dependency-path: "renderer/package-lock.json"

      - name: Install frontend dependencies and build
        run: |
          cd renderer
          npm ci
          npm run build
          cd ..

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          buildkitd-flags: --debug

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: guarzo
          password: ${{ secrets.DOCKERHUB_PAT }}

      - name: Build and Push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ steps.version.outputs.docker_tags }}
          build-args: |
            APP_VERSION=${{ steps.version.outputs.full_version }}
          cache-from: type=registry,ref=guarzo/wanderer-notifier:latest
          cache-to: type=inline

      - name: Test Docker image
        run: |
          echo "Testing Docker image..."
          ./scripts/test_docker_image.sh -t "branch-${{ steps.version.outputs.safe_branch }}"
