name: Ad-hoc

on:
  workflow_dispatch:
    inputs:
      branch:
        description: "Branch to build"
        required: true
        default: "main"

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      MIX_ENV: prod
    steps:
      - name: Initial checkout
        uses: actions/checkout@v3

      - name: Common Checkout and Cache
        uses: ./.github/actions/common-checkout-cache
        with:
          branch: ${{ github.event.inputs.branch }}
          cache-key-prefix: mix
          cache-paths: |
            deps
            _build
            priv/static

      - name: Generate version information
        id: version
        uses: ./.github/actions/common-versioning
        with:
          mode: adhoc
          branch: ${{ github.event.inputs.branch }}

      - name: Common Node.js Setup
        uses: ./.github/actions/common-node-setup
        with:
          node_version: "20"
          cache_dependency_path: "renderer/package-lock.json"

      - name: Install frontend dependencies and build
        run: |
          cd renderer
          npm ci
          npm run build
          cd ..

      - name: Build Docker image (SHA tagged)
        uses: ./.github/actions/common-docker-build
        with:
          push: "false"
          tags: guarzo/wanderer-notifier:sha-${{ steps.version.outputs.short_sha }}
          build_args: |
            APP_VERSION=${{ steps.version.outputs.full_version }}
            WANDERER_NOTIFIER_API_TOKEN=${{ secrets.NOTIFIER_API_TOKEN }}
          cache_from: type=registry,ref=guarzo/wanderer-notifier:latest
          cache_to: type=inline
          docker_username: guarzo
          docker_password: ${{ secrets.DOCKERHUB_PAT }}

      - name: Test Docker image
        run: |
          echo "Testing Docker image..."
          ./scripts/test_docker_image.sh -t "sha-${{ steps.version.outputs.short_sha }}" --basic --discord-token "${{ secrets.FAKE_DISCORD_TOKEN }}"
          echo "Docker image test passed successfully!"

      - name: Push Docker image with branch tags
        uses: ./.github/actions/common-docker-build
        with:
          push: "true"
          tags: ${{ steps.version.outputs.docker_tags }}
          build_args: |
            APP_VERSION=${{ steps.version.outputs.full_version }}
            WANDERER_NOTIFIER_API_TOKEN=${{ secrets.NOTIFIER_API_TOKEN }}
          cache_from: type=registry,ref=guarzo/wanderer-notifier:latest
          cache_to: type=inline
          docker_username: guarzo
          docker_password: ${{ secrets.DOCKERHUB_PAT }}
