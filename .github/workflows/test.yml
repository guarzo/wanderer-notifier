name: Test

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    name: Build and test
    runs-on: ubuntu-latest
    env:
      # Add environment variables for testing
      DISCORD_BOT_TOKEN: ${{ secrets.FAKE_DISCORD_TOKEN }}
      MIX_ENV: "test"
      CACHE_DIR: "/tmp/wanderer_notifier_cache"

    steps:
      - uses: actions/checkout@v3

      - name: Set up Elixir
        uses: erlef/setup-beam@v1
        with:
          elixir-version: "1.18"
          otp-version: "27"

      - name: Restore dependencies cache
        uses: actions/cache@v3
        with:
          path: |
            deps
            _build
          key: ${{ runner.os }}-mix-${{ hashFiles('**/mix.lock') }}
          restore-keys: ${{ runner.os }}-mix-

      - name: Clean dependencies
        run: |
          mix deps.clean --all
          rm -rf _build

      - name: Install dependencies
        run: |
          mix deps.get
          mix deps.compile --force

      - name: Clean and recompile Ash (to ensure correct config)
        run: mix deps.clean ash ash_postgres --build && mix deps.compile

      - name: Check formatting (non-blocking)
        run: mix format --check-formatted
        continue-on-error: true

      - name: Compile (warnings as errors)
        run: mix compile --warnings-as-errors

      - name: Run tests
        run: mix test

      # - name: Generate test coverage
      #   run: mix test --cover
      #   continue-on-error: true

      - name: Run code quality checks
        run: mix credo

  # Optionally you could add a matrix test job for multiple Elixir/OTP versions
  # test-matrix:
  #   name: Test with Elixir ${{ matrix.elixir }} and OTP ${{ matrix.otp }}
  #   runs-on: ubuntu-latest
  #   needs: test
  #   strategy:
  #     matrix:
  #       elixir: ['1.13.x', '1.14.x']
  #       otp: ['24.x', '25.x']
  #   steps:
  #     # Same steps as above but using matrix versions
