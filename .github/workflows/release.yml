name: Release

on:
  workflow_dispatch:
    inputs:
      version_type:
        description: "Version increment type"
        required: true
        default: "patch"
        type: choice
        options:
          - patch
          - minor
          - major

jobs:
  release:
    runs-on: ubuntu-latest
    env:
      MIX_ENV: prod
    steps:
      - name: Initial checkout
        uses: actions/checkout@v3

      - name: Common Checkout and Cache
        uses: ./.github/actions/common-checkout-cache
        with:
          branch: main
          cache-key-prefix: mix
          cache-paths: |
            deps
            _build
            priv/static

      - name: Generate version information
        id: version
        uses: ./.github/actions/common-versioning
        with:
          mode: release
          version_type: ${{ github.event.inputs.version_type }}

      - name: Create Git tag
        run: |
          git config --local user.email "actions@github.com"
          git config --local user.name "GitHub Actions"
          git add VERSION mix.exs
          git commit -m "Release version ${{ steps.version.outputs.version }}"
          git tag -a "v${{ steps.version.outputs.version }}" -m "Release v${{ steps.version.outputs.version }}"
          git push origin "v${{ steps.version.outputs.version }}"
          git push

      - name: Common Node.js Setup
        uses: ./.github/actions/common-node-setup
        with:
          node_version: "20"
          cache_dependency_path: "renderer/package-lock.json"

      - name: Install frontend dependencies and build
        run: |
          cd renderer
          npm ci
          npm run build
          cd ..

      - name: Build Docker image (SHA tagged)
        uses: ./.github/actions/common-docker-build
        with:
          context: .
          push: false
          load: true
          tags: guarzo/wanderer-notifier:sha-${{ steps.version.outputs.short_sha }}
          build-args: |
            APP_VERSION=${{ steps.version.outputs.full_version }}
            WANDERER_NOTIFIER_API_TOKEN=${{ secrets.NOTIFIER_API_TOKEN }}
          cache-from: type=registry,ref=guarzo/wanderer-notifier:latest
          cache-to: type=inline

      - name: Test Docker image
        run: |
          echo "Testing Docker image..."
          ./scripts/test_docker_image.sh -t "sha-${{ steps.version.outputs.short_sha }}" --discord-token "${{ secrets.FAKE_DISCORD_TOKEN }}"
          echo "Docker image validation successful!"

      - name: Extract major version
        id: major_version
        run: |
          VERSION="${{ steps.version.outputs.version }}"
          MAJOR_VERSION="v${VERSION%%.*}"
          echo "value=${MAJOR_VERSION}" >> "$GITHUB_OUTPUT"

      - name: Push Docker image with release tags
        uses: ./.github/actions/common-docker-build
        with:
          context: .
          push: true
          tags: guarzo/wanderer-notifier:latest,guarzo/wanderer-notifier:${{ steps.major_version.outputs.value }},guarzo/wanderer-notifier:v${{ steps.version.outputs.version }}
          build-args: |
            APP_VERSION=${{ steps.version.outputs.full_version }}
            WANDERER_NOTIFIER_API_TOKEN=${{ secrets.NOTIFIER_API_TOKEN }}
          cache-from: type=registry,ref=guarzo/wanderer-notifier:latest
          cache-to: type=inline
          docker_username: guarzo
          docker_password: ${{ secrets.DOCKERHUB_PAT }}

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: "v${{ steps.version.outputs.version }}"
          name: "Release v${{ steps.version.outputs.version }}"
          body: |
            ## Wanderer Notifier v${{ steps.version.outputs.version }}

            Build: ${{ steps.version.outputs.full_version }}

            ### Docker Image
            ```
            docker pull guarzo/wanderer-notifier:v${{ steps.version.outputs.version }}
            ```
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
