name: Release

on:
  workflow_dispatch:
    inputs:
      version_type:
        description: "Version increment type"
        required: true
        default: "patch"
        type: choice
        options:
          - patch
          - minor
          - major

jobs:
  release:
    runs-on: ubuntu-latest
    env:
      MIX_ENV: prod
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 # required for getting commit history

      - name: Set up build cache
        uses: actions/cache@v3
        with:
          path: |
            deps
            _build
            priv/static
          key: ${{ runner.os }}-mix-${{ hashFiles('**/mix.lock') }}
          restore-keys: |
            ${{ runner.os }}-mix-

      - name: Generate version information
        id: version
        run: |
          chmod +x ./scripts/version.sh

          # Generate new version based on input
          NEW_VERSION=$(./scripts/version.sh bump ${{ github.event.inputs.version_type }})
          FULL_VERSION=$(./scripts/version.sh full)

          # Get short SHA for image tagging
          SHORT_SHA=$(git rev-parse --short HEAD)

          # Store in environment for later steps
          echo "version=${NEW_VERSION}" >> "$GITHUB_OUTPUT"
          echo "full_version=${FULL_VERSION}" >> "$GITHUB_OUTPUT"
          echo "short_sha=${SHORT_SHA}" >> "$GITHUB_OUTPUT"

          # Update version files
          ./scripts/version.sh update ${{ github.event.inputs.version_type }}

          # List Docker tags
          DOCKER_TAGS=$(./scripts/version.sh tags)
          DOCKER_TAG_LIST=""

          # Convert newline-separated tags to comma-separated list for Docker build action
          while IFS= read -r tag; do
            if [ -n "$DOCKER_TAG_LIST" ]; then
              DOCKER_TAG_LIST="${DOCKER_TAG_LIST},guarzo/wanderer-notifier:${tag}"
            else
              DOCKER_TAG_LIST="guarzo/wanderer-notifier:${tag}"
            fi
          done <<< "$DOCKER_TAGS"

          echo "docker_tags=${DOCKER_TAG_LIST}" >> "$GITHUB_OUTPUT"

          echo "Generated version: ${NEW_VERSION}"
          echo "Full version: ${FULL_VERSION}"
          echo "Short SHA: ${SHORT_SHA}"
          echo "Docker tags: ${DOCKER_TAG_LIST}"

      - name: Create Git tag
        run: |
          git config --local user.email "actions@github.com"
          git config --local user.name "GitHub Actions"
          git add VERSION mix.exs
          git commit -m "Release version ${{ steps.version.outputs.version }}"
          git tag -a "v${{ steps.version.outputs.version }}" -m "Release v${{ steps.version.outputs.version }}"
          git push origin "v${{ steps.version.outputs.version }}"
          git push

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
          cache-dependency-path: "renderer/package-lock.json"

      - name: Install frontend dependencies and build
        run: |
          cd renderer
          npm ci
          npm run build
          cd ..

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          buildkitd-flags: --debug

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: guarzo
          password: ${{ secrets.DOCKERHUB_PAT }}

      - name: Build Docker image (SHA tagged)
        uses: docker/build-push-action@v5
        with:
          context: .
          push: false
          load: true
          tags: guarzo/wanderer-notifier:sha-${{ steps.version.outputs.short_sha }}
          build-args: |
            APP_VERSION=${{ steps.version.outputs.full_version }}
            WANDERER_NOTIFIER_API_TOKEN=${{ secrets.NOTIFIER_API_TOKEN }}
          cache-from: type=registry,ref=guarzo/wanderer-notifier:latest
          cache-to: type=inline

      - name: Test Docker image
        run: |
          echo "Testing Docker image..."
          # For releases, run the most thorough tests including the functional web test
          # to ensure the application fully boots and serves requests
          ./scripts/test_docker_image.sh -t "sha-${{ steps.version.outputs.short_sha }}" --discord-token "${{ secrets.FAKE_DISCORD_TOKEN }}"

          echo "Docker image validation successful!"

      - name: Push Docker image with release tags
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.version.outputs.docker_tags }}
          build-args: |
            APP_VERSION=${{ steps.version.outputs.full_version }}
            WANDERER_NOTIFIER_API_TOKEN=${{ secrets.NOTIFIER_API_TOKEN }}
          cache-from: type=registry,ref=guarzo/wanderer-notifier:latest
          cache-to: type=inline

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: "v${{ steps.version.outputs.version }}"
          name: "Release v${{ steps.version.outputs.version }}"
          body: |
            ## Wanderer Notifier v${{ steps.version.outputs.version }}

            Build: ${{ steps.version.outputs.full_version }}

            ### Docker Image
            ```
            docker pull guarzo/wanderer-notifier:v${{ steps.version.outputs.version }}
            ```
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
