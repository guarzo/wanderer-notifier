name: Official Release

on:
  workflow_dispatch:
    inputs:
      release_version:
        description: "Release version (format: major.minor.patch)"
        required: false
        default: "1.0.0"

jobs:
  release:
    runs-on: ubuntu-latest
    env:
      MIX_ENV: prod
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 # required for getting commit SHA

      - name: Generate version string
        id: version
        run: |
          SHORT_SHA=$(git rev-parse --short HEAD)
          DATE=$(date +'%Y%m%d')
          # Create a valid Elixir version string
          VERSION="${{ github.event.inputs.release_version }}"
          DOCKER_VERSION="${{ github.event.inputs.release_version }}-${DATE}-${SHORT_SHA}"
          # Extract the major version number and create a v-prefixed tag
          MAJOR_VERSION=$(echo "$VERSION" | cut -d. -f1)
          VTAG="v${MAJOR_VERSION}"

          echo "version=${VERSION}" >> "$GITHUB_OUTPUT"
          echo "docker_version=${DOCKER_VERSION}" >> "$GITHUB_OUTPUT"
          echo "vtag=${VTAG}" >> "$GITHUB_OUTPUT"
          echo "Generated Elixir version: ${VERSION}"
          echo "Generated Docker version: ${DOCKER_VERSION}"
          echo "Generated v-tag: ${VTAG}"
          echo "short_sha=${SHORT_SHA}" >> "$GITHUB_OUTPUT"

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"
          cache-dependency-path: "renderer/package-lock.json"
      - name: Build React application
        run: |
          cd renderer
          npm ci
          npm run build
          cd ..
          # Ensure the static app directory exists
          mkdir -p priv/static/app
          # Copy the built React app to the static directory
          cp -r renderer/dist/* priv/static/app/

      - name: Set up BEAM
        uses: erlef/setup-beam@v1
        with:
          elixir-version: "1.14.5"
          otp-version: "25.0"

      - name: Update version in mix.exs
        run: |
          # Update the version with a valid Elixir version format
          sed -i "s/version: \"[^\"]*\"/version: \"${{ steps.version.outputs.version }}\"/" mix.exs
          cat mix.exs

      - name: Install dependencies and build release
        run: |
          mix local.hex --force
          mix local.rebar --force
          mix deps.get --only prod
          mix deps.compile

          # Build the release
          mix release

      - name: Debug Dockerfile
        run: |
          echo "Current directory: $(pwd)"
          echo "Listing files in current directory:"
          ls -la
          echo "Dockerfile content:"
          cat Dockerfile

      - name: Build Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: false
          load: true
          build-args: |
            WANDERER_PRODUCTION_BOT_TOKEN=${{ secrets.PRODUCTION_BOT_TOKEN }}
            APP_VERSION=${{ steps.version.outputs.docker_version }}
          tags: |
            guarzo/wanderer-notifier:${{ steps.version.outputs.vtag }}
            guarzo/wanderer-notifier:${{ steps.version.outputs.docker_version }}

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: guarzo
          password: ${{ secrets.DOCKERHUB_PAT }}

      - name: Push Docker image
        run: |
          docker push guarzo/wanderer-notifier:${{ steps.version.outputs.vtag }}
          docker push guarzo/wanderer-notifier:${{ steps.version.outputs.docker_version }}
