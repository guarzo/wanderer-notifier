name: Automatic Image

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      MIX_ENV: prod
    steps:
      - name: Common Checkout and Cache
        uses: ./.github/actions/common-checkout-cache
        with:
          branch: main
          cache-key-prefix: mix
          cache-paths: |
            deps
            _build
            priv/static

      - name: Generate version information
        id: version
        uses: ./.github/actions/common-versioning
        with:
          mode: automatic

      - name: Common Node.js Setup
        uses: ./.github/actions/common-node-setup
        with:
          node_version: "20"
          cache_dependency_path: "renderer/package-lock.json"

      - name: Install frontend dependencies and build
        run: |
          cd renderer
          npm ci
          npm run build
          cd ..

      - name: Build Docker image (SHA tagged)
        uses: ./.github/actions/common-docker-build
        with:
          push: "false"
          tags: guarzo/wanderer-notifier:sha-${{ steps.version.outputs.short_sha }}
          build_args: |
            APP_VERSION=${{ steps.version.outputs.dev_version }}
            WANDERER_NOTIFIER_API_TOKEN=${{ secrets.WANDERER_NOTIFIER_API_TOKEN }}
          cache_from: type=registry,ref=guarzo/wanderer-notifier:dev
          cache_to: type=inline
          docker_username: guarzo
          docker_password: ${{ secrets.DOCKERHUB_PAT }}

      - name: Test Docker image
        run: |
          echo "Testing Docker image..."
          ./scripts/test_docker_image.sh -t "sha-${{ steps.version.outputs.short_sha }}" --basic --discord-token "${{ secrets.FAKE_DISCORD_TOKEN }}"
          echo "Docker image test passed successfully!"

      - name: Build and Push Docker image with tags
        uses: ./.github/actions/common-docker-build
        with:
          push: "true"
          tags: ${{ steps.version.outputs.docker_tags }}
          build_args: |
            APP_VERSION=${{ steps.version.outputs.dev_version }}
            WANDERER_NOTIFIER_API_TOKEN=${{ secrets.NOTIFIER_API_TOKEN }}
          cache_from: type=registry,ref=guarzo/wanderer-notifier:dev
          cache_to: type=inline
          docker_username: guarzo
          docker_password: ${{ secrets.DOCKERHUB_PAT }}

      - name: Create and push Git tag
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config --global user.email "actions@github.com"
          git config --global user.name "GitHub Actions"
          git tag "${{ steps.version.outputs.dev_version }}"
          git push origin "${{ steps.version.outputs.dev_version }}"
