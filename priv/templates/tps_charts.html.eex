<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>EVE Corp Tools TPS Charts</title>
  <style>
    body {
      font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
      background-color: #1e1e1e;
      color: #ffffff;
      margin: 0;
      padding: 20px;
    }
    .container {
      max-width: 1200px;
      margin: 0 auto;
    }
    h1, h2 {
      color: #36a2eb;
    }
    .chart-container {
      margin-bottom: 30px;
      background-color: #2f3136;
      border-radius: 8px;
      padding: 20px;
      box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    }
    .chart {
      width: 100%;
      height: auto;
      max-width: 100%;
      border-radius: 4px;
    }
    .chart-title {
      margin-top: 0;
      margin-bottom: 15px;
      font-size: 1.5rem;
    }
    .chart-description {
      margin-bottom: 15px;
      color: #dcddde;
    }
    .loading {
      display: flex;
      justify-content: center;
      align-items: center;
      height: 400px;
      background-color: #2f3136;
      border-radius: 8px;
      font-size: 1.2rem;
      color: #dcddde;
    }
    .error {
      color: #ff4d4d;
      padding: 10px;
      background-color: rgba(255, 77, 77, 0.1);
      border-radius: 4px;
      margin-bottom: 15px;
    }
    .refresh-button {
      background-color: #36a2eb;
      color: white;
      border: none;
      padding: 10px 20px;
      border-radius: 4px;
      cursor: pointer;
      font-size: 1rem;
      margin-bottom: 20px;
    }
    .refresh-button:hover {
      background-color: #2186c9;
    }
    .header {
      display: flex;
      justify-content: space-between;
      align-items: center;
      margin-bottom: 20px;
    }
    @media (max-width: 768px) {
      .header {
        flex-direction: column;
        align-items: flex-start;
      }
      .refresh-button {
        margin-top: 10px;
      }
    }
    .button-group {
      display: flex;
      gap: 10px;
      margin-top: 10px;
    }
    .discord-button {
      background-color: #5865F2;
      color: white;
      border: none;
      padding: 8px 16px;
      border-radius: 4px;
      cursor: pointer;
      font-size: 0.9rem;
    }
    .discord-button:hover {
      background-color: #4752c4;
    }
    .success-message, .error-message {
      padding: 10px;
      border-radius: 4px;
      margin-top: 10px;
      display: none;
    }
    .success-message {
      background-color: rgba(76, 201, 240, 0.1);
      color: #4cc9f0;
      border: 1px solid rgba(76, 201, 240, 0.3);
    }
    .error-message {
      background-color: rgba(255, 77, 77, 0.1);
      color: #ff4d4d;
      border: 1px solid rgba(255, 77, 77, 0.3);
    }
  </style>
</head>
<body>
  <div class="container">
    <div class="header">
      <h1>EVE Corp Tools TPS Charts</h1>
      <button id="refresh-button" class="refresh-button">Refresh Data</button>
    </div>

    <div id="loading-message" class="loading">Loading charts...</div>
    <div id="error-message" class="error" style="display: none;"></div>

    <div id="charts-container" style="display: none;">
      <div class="chart-container">
        <h2 class="chart-title">Top Ship Types by Kills</h2>
        <p class="chart-description">Shows the top 10 ship types used in kills over the last 12 months.</p>
        <img id="kills-by-ship-type-chart" class="chart" alt="Top Ship Types by Kills">
        <div class="button-group">
          <button class="discord-button" onclick="sendChartToDiscord('kills-by-ship-type')">Send to Discord</button>
          <div id="kills-by-ship-type-success" class="success-message">Chart sent to Discord!</div>
          <div id="kills-by-ship-type-error" class="error-message">Failed to send chart to Discord.</div>
        </div>
      </div>

      <div class="chart-container">
        <h2 class="chart-title">Kills by Month</h2>
        <p class="chart-description">Shows the number of kills per month over the last 12 months.</p>
        <img id="kills-by-month-chart" class="chart" alt="Kills by Month">
        <div class="button-group">
          <button class="discord-button" onclick="sendChartToDiscord('kills-by-month')">Send to Discord</button>
          <div id="kills-by-month-success" class="success-message">Chart sent to Discord!</div>
          <div id="kills-by-month-error" class="error-message">Failed to send chart to Discord.</div>
        </div>
      </div>

      <div class="chart-container">
        <h2 class="chart-title">Kills and Value Over Time</h2>
        <p class="chart-description">Shows the number of kills and estimated value over time.</p>
        <img id="total-kills-value-chart" class="chart" alt="Kills and Value Over Time">
        <div class="button-group">
          <button class="discord-button" onclick="sendChartToDiscord('total-kills-value')">Send to Discord</button>
          <div id="total-kills-value-success" class="success-message">Chart sent to Discord!</div>
          <div id="total-kills-value-error" class="error-message">Failed to send chart to Discord.</div>
        </div>
      </div>
    </div>

    <div class="button-group" style="margin-top: 30px;">
      <button class="discord-button" style="padding: 12px 24px; font-size: 1rem;" onclick="sendAllChartsToDiscord()">Send All Charts to Discord</button>
      <button class="discord-button" style="padding: 12px 24px; font-size: 1rem; background-color: #7289DA;" onclick="triggerScheduler()">Trigger Scheduled Task</button>
      <div id="all-charts-success" class="success-message">All charts sent to Discord!</div>
      <div id="all-charts-error" class="error-message">Failed to send charts to Discord.</div>
      <div id="scheduler-success" class="success-message">Scheduler triggered successfully!</div>
      <div id="scheduler-error" class="error-message">Failed to trigger scheduler.</div>
    </div>
  </div>

  <script>
    document.addEventListener('DOMContentLoaded', function() {
      // Load charts when the page loads
      loadCharts();

      // Set up refresh button
      document.getElementById('refresh-button').addEventListener('click', function() {
        // First refresh the TPS data
        refreshTPSData().then(() => {
          // Then load the charts
          loadCharts();
        });
      });
    });

    function showError(message) {
      const errorElement = document.getElementById('error-message');
      errorElement.textContent = message;
      errorElement.style.display = 'block';
      document.getElementById('loading-message').style.display = 'none';
    }

    function refreshTPSData() {
      document.getElementById('loading-message').style.display = 'flex';
      document.getElementById('charts-container').style.display = 'none';
      document.getElementById('error-message').style.display = 'none';

      return fetch('/api/corp-tools/refresh-tps')
        .then(response => {
          if (!response.ok) {
            throw new Error('Failed to refresh TPS data');
          }
          return response.json();
        })
        .catch(error => {
          showError('Error refreshing TPS data: ' + error.message);
          return Promise.reject(error);
        });
    }

    function loadCharts() {
      document.getElementById('loading-message').style.display = 'flex';
      document.getElementById('charts-container').style.display = 'none';
      document.getElementById('error-message').style.display = 'none';

      // Hide all success/error messages
      hideAllMessages();

      fetch('/api/corp-tools/charts/all')
        .then(response => {
          if (!response.ok) {
            if (response.status === 206) {
              // Data is still loading
              showError('TPS data is still loading. Please wait a moment and try again.');
              return null;
            }
            throw new Error('Failed to load charts');
          }
          return response.json();
        })
        .then(data => {
          if (!data) return;

          if (data.status === 'ok' && data.charts) {
            // Set chart images
            if (data.charts.kills_by_ship_type) {
              document.getElementById('kills-by-ship-type-chart').src = data.charts.kills_by_ship_type;
            }

            if (data.charts.kills_by_month) {
              document.getElementById('kills-by-month-chart').src = data.charts.kills_by_month;
            }

            if (data.charts.total_kills_value) {
              document.getElementById('total-kills-value-chart').src = data.charts.total_kills_value;
            }

            // Show charts container
            document.getElementById('loading-message').style.display = 'none';
            document.getElementById('charts-container').style.display = 'block';
          } else {
            showError('No chart data available');
          }
        })
        .catch(error => {
          showError('Error loading charts: ' + error.message);
        });
    }

    function hideAllMessages() {
      // Hide all success and error messages
      const messages = document.querySelectorAll('.success-message, .error-message');
      messages.forEach(message => {
        message.style.display = 'none';
      });
    }

    function sendChartToDiscord(chartType) {
      // Hide all messages first
      hideAllMessages();

      // Show loading state on the button
      const button = document.querySelector(`button[onclick="sendChartToDiscord('${chartType}')"]`);
      const originalText = button.textContent;
      button.textContent = 'Sending...';
      button.disabled = true;

      fetch(`/api/corp-tools/charts/send-to-discord/${chartType}`)
        .then(response => response.json())
        .then(data => {
          // Reset button
          button.textContent = originalText;
          button.disabled = false;

          if (data.status === 'ok') {
            // Show success message
            document.getElementById(`${chartType}-success`).style.display = 'block';

            // Hide success message after 3 seconds
            setTimeout(() => {
              document.getElementById(`${chartType}-success`).style.display = 'none';
            }, 3000);
          } else {
            // Show error message
            const errorElement = document.getElementById(`${chartType}-error`);
            errorElement.textContent = data.message || 'Failed to send chart to Discord.';
            errorElement.style.display = 'block';
          }
        })
        .catch(error => {
          // Reset button
          button.textContent = originalText;
          button.disabled = false;

          // Show error message
          const errorElement = document.getElementById(`${chartType}-error`);
          errorElement.textContent = 'Error: ' + error.message;
          errorElement.style.display = 'block';
        });
    }

    function sendAllChartsToDiscord() {
      // Hide all messages first
      hideAllMessages();

      // Show loading state on the button
      const button = document.querySelector('button[onclick="sendAllChartsToDiscord()"]');
      const originalText = button.textContent;
      button.textContent = 'Sending...';
      button.disabled = true;

      fetch('/api/corp-tools/charts/send-all-to-discord')
        .then(response => response.json())
        .then(data => {
          // Reset button
          button.textContent = originalText;
          button.disabled = false;

          if (data.status === 'ok') {
            // Show success message
            document.getElementById('all-charts-success').style.display = 'block';

            // Hide success message after 3 seconds
            setTimeout(() => {
              document.getElementById('all-charts-success').style.display = 'none';
            }, 3000);
          } else {
            // Show error message
            const errorElement = document.getElementById('all-charts-error');
            errorElement.textContent = data.message || 'Failed to send charts to Discord.';
            errorElement.style.display = 'block';
          }
        })
        .catch(error => {
          // Reset button
          button.textContent = originalText;
          button.disabled = false;

          // Show error message
          const errorElement = document.getElementById('all-charts-error');
          errorElement.textContent = 'Error: ' + error.message;
          errorElement.style.display = 'block';
        });
    }

    function triggerScheduler() {
      // Hide all messages first
      hideAllMessages();

      // Show loading state on the button
      const button = document.querySelector('button[onclick="triggerScheduler()"]');
      const originalText = button.textContent;
      button.textContent = 'Triggering...';
      button.disabled = true;

      fetch('/api/corp-tools/charts/trigger-scheduler')
        .then(response => response.json())
        .then(data => {
          // Reset button
          button.textContent = originalText;
          button.disabled = false;

          if (data.status === 'ok') {
            // Show success message
            document.getElementById('scheduler-success').style.display = 'block';

            // Hide success message after 3 seconds
            setTimeout(() => {
              document.getElementById('scheduler-success').style.display = 'none';
            }, 3000);
          } else {
            // Show error message
            const errorElement = document.getElementById('scheduler-error');
            errorElement.textContent = data.message || 'Failed to trigger scheduler.';
            errorElement.style.display = 'block';
          }
        })
        .catch(error => {
          // Reset button
          button.textContent = originalText;
          button.disabled = false;

          // Show error message
          const errorElement = document.getElementById('scheduler-error');
          errorElement.textContent = 'Error: ' + error.message;
          errorElement.style.display = 'block';
        });
    }
  </script>
</body>
</html>
