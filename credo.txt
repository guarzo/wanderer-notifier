Checking 208 source files (this might take a while) ...

  Software Design                                                                              
┃ 
┃ [D] ↘ Nested modules could be aliased at the top of the invoking module.
┃       lib/wanderer_notifier/resources/killmail_persistence.ex:1834:11 #(WandererNotifier.Resources.KillmailPersistence.persist_character_involvement)
┃ [D] ↘ Nested modules could be aliased at the top of the invoking module.
┃       lib/wanderer_notifier/resources/killmail_persistence.ex:1074:7 #(WandererNotifier.Resources.KillmailPersistence.check_killmail_exists_in_database)
┃ [D] ↘ Nested modules could be aliased at the top of the invoking module.
┃       lib/wanderer_notifier/resources/killmail_persistence.ex:1763:7 #(WandererNotifier.Resources.KillmailPersistence.persist_normalized_killmail)
┃ [D] ↘ Nested modules could be aliased at the top of the invoking module.
┃       lib/wanderer_notifier/resources/killmail_persistence.ex:1742:11 #(WandererNotifier.Resources.KillmailPersistence.get_character_involvement)
┃ [D] ↘ Nested modules could be aliased at the top of the invoking module.
┃       lib/wanderer_notifier/resources/killmail_persistence.ex:1719:11 #(WandererNotifier.Resources.KillmailPersistence.get_character_involvement)
┃ [D] ↘ Nested modules could be aliased at the top of the invoking module.
┃       lib/wanderer_notifier/resources/killmail_persistence.ex:1697:23 #(WandererNotifier.Resources.KillmailPersistence.convert_to_normalized_format)
┃ [D] ↘ Nested modules could be aliased at the top of the invoking module.
┃       lib/wanderer_notifier/resources/killmail_persistence.ex:1623:10 #(WandererNotifier.Resources.KillmailPersistence.check_normalized_killmail_exists)
┃ [D] ↘ Nested modules could be aliased at the top of the invoking module.
┃       lib/wanderer_notifier/schedulers/weekly_kill_highlights_scheduler.ex:613:10 #(WandererNotifier.Schedulers.WeeklyKillHighlightsScheduler.query_tracked_characters_from_database)

  Refactoring opportunities                                                                    
┃ 
┃ [F] → Function body is nested too deep (max depth is 2, was 3).
┃       lib/wanderer_notifier/resources/killmail_persistence.ex:1018:13 #(WandererNotifier.Resources.KillmailPersistence.resolve_character_name_for_persistence)
┃ [F] → Function body is nested too deep (max depth is 2, was 3).
┃       lib/wanderer_notifier/resources/killmail_persistence.ex:932:13 #(WandererNotifier.Resources.KillmailPersistence.resolve_character_name)
┃ [F] → Function body is nested too deep (max depth is 2, was 3).
┃       lib/wanderer_notifier/resources/killmail_persistence.ex:227:13 #(WandererNotifier.Resources.KillmailPersistence.process_tracked_character)
┃ [F] → Function body is nested too deep (max depth is 2, was 3).
┃       lib/wanderer_notifier/resources/killmail_aggregation.ex:723:11 #(WandererNotifier.Resources.KillmailAggregation.sum_killmail_values)
┃ [F] → Function body is nested too deep (max depth is 2, was 3).
┃       lib/wanderer_notifier/killmail_processing/metrics.ex:362:21 #(WandererNotifier.KillmailProcessing.Metrics.increment_counter_impl)
┃ [F] → Function body is nested too deep (max depth is 2, was 3).
┃       lib/wanderer_notifier/api/map/systems_client.ex:44:13 #(WandererNotifier.Api.Map.SystemsClient.update_systems)
┃ [F] → Function body is nested too deep (max depth is 2, was 3).
┃       lib/wanderer_notifier/api/character/kills_service.ex:1178:13 #(WandererNotifier.Api.Character.KillsService.get_system_name_with_cache)
┃ [F] → Function body is nested too deep (max depth is 2, was 3).
┃       lib/wanderer_notifier/api/character/kills_service.ex:1129:13 #(WandererNotifier.Api.Character.KillsService.get_ship_type_name_with_cache)
┃ [F] → Function body is nested too deep (max depth is 2, was 3).
┃       lib/wanderer_notifier/api/character/kills_service.ex:329:15 #(WandererNotifier.Api.Character.KillsService.process_tracked_characters)
┃ [F] → Function is too complex (cyclomatic complexity is 10, max is 9).
┃       lib/wanderer_notifier/resources/killmail_persistence.ex:905:8 #(WandererNotifier.Resources.KillmailPersistence.resolve_character_name)
┃ [F] → Function is too complex (cyclomatic complexity is 10, max is 9).
┃       lib/wanderer_notifier/notifiers/structured_formatter.ex:251:8 #(WandererNotifier.Notifiers.StructuredFormatter.get_normalized_final_blow_details)
┃ [F] → Function is too complex (cyclomatic complexity is 10, max is 9).
┃       lib/wanderer_notifier/notifications/determiner/kill.ex:187:8 #(WandererNotifier.Notifications.Determiner.Kill.extract_kill_data)
┃ [F] → Function is too complex (cyclomatic complexity is 10, max is 9).
┃       lib/wanderer_notifier/api/http/client.ex:647:8 #(WandererNotifier.Api.Http.Client.transient_error?)
┃ [F] → Cond statements should contain at least two conditions besides `true`, consider using 
┃       `if` instead.
┃       lib/wanderer_notifier/killmail_processing/pipeline.ex:380:5 #(WandererNotifier.KillmailProcessing.Pipeline.apply_system_name_fix)

Please report incorrect results: https://github.com/rrrene/credo/issues

Analysis took 2.1 seconds (0.4s to load, 1.6s running 67 checks on 208 files)
2989 mods/funs, found 14 refactoring opportunities, 8 software design suggestions.

Use `mix credo explain` to explain issues, `mix credo --help` for options.
